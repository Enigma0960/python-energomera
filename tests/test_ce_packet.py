from typing import Optional, List

from energomera.protocol.ce import Packet

_TEST_GOOD_DATA_1 = b'\xC0\x48\x66\xB7\xFD\x00\x31\xDE\x0B\x00\xD0\x01\x20\x90\xC0'
_TEST_GOOD_DATA_2 = b'\xC0\x48\xFD\x00\x66\xB7\x57\x01\x20\x19\x21\x23\x02\x19\x07\x22\x1A\xC0'
_TEST_GOOD_DATA_3 = b'\xC0\x48\xFD\x00\x66\xB7\x57\x01\x5A\x00\x15\x03\x03\x15\x10\x04\xC8\xC0'
_TEST_GOOD_DATA_4 = b'\xC0\x48\x66\xB7\xFD\x00\x31\xDE\x0B\x00\xD0\x01\x00\xC8\xC0'
_TEST_GOOD_DATA_5 = b'\xC0\x48\xFD\x00\x66\xB7\x56\x01\x00\x0A\x01\x01\x14\x02\x17\xEA\xC0'
_TEST_GOOD_DATA_6 = b'\xC0\x48\x66\xB7\xFD\x00\x31\xDE\x0B\x00\xD0\x01\x60\x20\xC0'
_TEST_GOOD_DATA_7 = b'\xC0\x48\xFD\x00\x66\xB7\x5C\x01\x60\x00\x01\x00\x0B\x04\x03\x00\x01\x00\x01\x00\x01\x77\xC0'
_TEST_GOOD_DATA_8 = b'\xC0\x48\x66\xB7\xFD\x00\x31\xDE\x0B\x00\xD1\x01\x1A\x00\x10\xC0'
_TEST_GOOD_DATA_9 = b'\xC0\x48\xFD\x00\x66\xB7\x58\x01\x1A\x30\x35\x39\x36\x34\x36\x34\x37\xF1\xC0'
_TEST_GOOD_DATA_10 = b'\xC0\x48\x66\xB7\xFD\x00\x31\xDE\x0B\x00\xD1\x01\x1A\x01\xA5\xC0'
_TEST_GOOD_DATA_11 = b'\xC0\x48\xFD\x00\x66\xB7\x58\x01\x1A\x31\x36\x39\x36\x31\x31\x30\x00\xCD\xC0'

_TEST_ALL_GOOD_DATA = [
    _TEST_GOOD_DATA_1,
    _TEST_GOOD_DATA_2,
    _TEST_GOOD_DATA_3,
    _TEST_GOOD_DATA_4,
    _TEST_GOOD_DATA_5,
    _TEST_GOOD_DATA_6,
    _TEST_GOOD_DATA_7,
    _TEST_GOOD_DATA_8,
    _TEST_GOOD_DATA_9,
    _TEST_GOOD_DATA_10,
    _TEST_GOOD_DATA_11,
]


def test_packet_process() -> None:
    for test in _TEST_ALL_GOOD_DATA:
        packets: List[Packet] = Packet.process(test)
        assert len(packets) == 1
        assert packets[0] is not None
